def aggregate_dynamic(n):
    size=1
    icost=0
    dcost=0
    total_cost=0
    amortized_cost=0
    
    print("Element\tDoubling cost\tInsertion Cost\tTotal cost")
    for i in range(1,n+1):
        icost=1
        if i>size:
            size=size*2
            dcost = i-1
        total_cost = dcost+icost
        amortized_cost=amortized_cost+total_cost
        print(i,"\t\t",dcost,"\t\t",icost,"\t\t",total_cost," ")
        icost=0
        dcost=0
    return amortized_cost/n

n = int(input("Enter the number of elements: "))
print("Aggregate method using dynamic tables: ")
a = aggregate_dynamic(n)
print("Amortized cost: ",a)


///////////////////////////////
pop=0
def stack():
    push=0
    s=[]
    arr=[5,7,9,2,8,6,3]
    for i in range(len(arr)):
        if arr[i]<len(s):
            multipop(s,arr[i])

        s.append(arr[i])
        push=push+1
        print("Push= ",push)
    cost(push,pop,arr)

def multipop(s,k):
    global pop
    for i in range(k):
        s.pop()
        pop=pop+1
    print("Pop= ",pop)
def cost(push,pop,arr):
    avg=(push+pop)/len(arr)
    print("Amortized cost: ",avg)
    print("Asymptotic cost: ",push+pop)

stack()